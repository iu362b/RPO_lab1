{"ast":null,"code":"import Utils from \"./Utils\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n/* ACTIONS */\n\nconst userConstants = {\n  LOGIN: 'USER_LOGIN',\n  LOGOUT: 'USER_LOGOUT'\n};\nconst alertConstants = {\n  ERROR: 'ERROR',\n  CLEAR: 'CLEAR'\n};\n/* ACTION GENERATORS */\n\nexport const userActions = {\n  login,\n  logout\n};\n\nfunction login(user) {\n  Utils.saveUser(user);\n  return {\n    type: userConstants.LOGIN,\n    user\n  };\n}\n\nfunction logout() {\n  Utils.removeUser();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nexport const alertActions = {\n  error,\n  clear\n};\n\nfunction error(msg) {\n  return {\n    type: alertConstants.ERROR,\n    msg\n  };\n}\n\nfunction clear() {\n  return {\n    type: alertConstants.CLEAR\n  };\n}\n/* REDUСERS */\n\n\nlet user = Utils.getUser();\nconst initialState = user ? {\n  user\n} : {};\n\nfunction authentication() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"authentication\");\n\n  switch (action.type) {\n    case userConstants.LOGIN:\n      return {\n        user: action.user\n      };\n\n    case userConstants.LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nfunction alert() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"alert\");\n\n  switch (action.type) {\n    case alertConstants.ERROR:\n      return {\n        msg: action.msg\n      };\n\n    case alertConstants.CLEAR:\n      return {};\n\n    default:\n      return state;\n  }\n}\n/* STORE */\n\n\nconst rootReducer = combineReducers({\n  authentication,\n  alert\n});\nconst loggerMiddleware = createLogger();\nexport const store = createStore(rootReducer, applyMiddleware(loggerMiddleware));","map":{"version":3,"names":["Utils","applyMiddleware","combineReducers","createStore","createLogger","userConstants","LOGIN","LOGOUT","alertConstants","ERROR","CLEAR","userActions","login","logout","user","saveUser","type","removeUser","alertActions","error","clear","msg","getUser","initialState","authentication","state","action","console","log","alert","rootReducer","loggerMiddleware","store"],"sources":["C:/Users/ngavr/IdeaProjects/backend/front/src/utils/Rdx.jsx"],"sourcesContent":["import Utils from \"./Utils\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {createLogger} from \"redux-logger\"\r\n\r\n/* ACTIONS */\r\nconst userConstants = {\r\n    LOGIN: 'USER_LOGIN',\r\n    LOGOUT: 'USER_LOGOUT',\r\n};\r\n\r\nconst alertConstants = {\r\n    ERROR: 'ERROR',\r\n    CLEAR: 'CLEAR',\r\n};\r\n\r\n/* ACTION GENERATORS */\r\nexport const userActions = {\r\n    login,\r\n    logout\r\n};\r\n\r\nfunction login(user) {\r\n    Utils.saveUser(user)\r\n    return { type: userConstants.LOGIN, user }\r\n}\r\n\r\nfunction logout() {\r\n    Utils.removeUser()\r\n    return { type: userConstants.LOGOUT }\r\n}\r\n\r\nexport const alertActions = {\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction error(msg) {\r\n    return { type: alertConstants.ERROR, msg }\r\n}\r\n\r\nfunction clear() {\r\n    return { type: alertConstants.CLEAR }\r\n}\r\n\r\n/* REDUСERS */\r\nlet user =  Utils.getUser()\r\nconst initialState = user ? { user } : {}\r\n\r\nfunction authentication(state = initialState, action) {\r\n    console.log(\"authentication\")\r\n    switch (action.type) {\r\n        case userConstants.LOGIN:\r\n            return { user: action.user };\r\n        case userConstants.LOGOUT:\r\n            return { };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction alert(state = {}, action) {\r\n    console.log(\"alert\")\r\n    switch (action.type) {\r\n        case alertConstants.ERROR:\r\n            return { msg: action.msg };\r\n        case alertConstants.CLEAR:\r\n            return { };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/* STORE */\r\nconst rootReducer = combineReducers({\r\n    authentication, alert\r\n});\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware( loggerMiddleware )\r\n);"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAEA;;AACA,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,YADW;EAElBC,MAAM,EAAE;AAFU,CAAtB;AAKA,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,OADY;EAEnBC,KAAK,EAAE;AAFY,CAAvB;AAKA;;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBC,KADuB;EAEvBC;AAFuB,CAApB;;AAKP,SAASD,KAAT,CAAeE,IAAf,EAAqB;EACjBd,KAAK,CAACe,QAAN,CAAeD,IAAf;EACA,OAAO;IAAEE,IAAI,EAAEX,aAAa,CAACC,KAAtB;IAA6BQ;EAA7B,CAAP;AACH;;AAED,SAASD,MAAT,GAAkB;EACdb,KAAK,CAACiB,UAAN;EACA,OAAO;IAAED,IAAI,EAAEX,aAAa,CAACE;EAAtB,CAAP;AACH;;AAED,OAAO,MAAMW,YAAY,GAAG;EACxBC,KADwB;EAExBC;AAFwB,CAArB;;AAKP,SAASD,KAAT,CAAeE,GAAf,EAAoB;EAChB,OAAO;IAAEL,IAAI,EAAER,cAAc,CAACC,KAAvB;IAA8BY;EAA9B,CAAP;AACH;;AAED,SAASD,KAAT,GAAiB;EACb,OAAO;IAAEJ,IAAI,EAAER,cAAc,CAACE;EAAvB,CAAP;AACH;AAED;;;AACA,IAAII,IAAI,GAAId,KAAK,CAACsB,OAAN,EAAZ;AACA,MAAMC,YAAY,GAAGT,IAAI,GAAG;EAAEA;AAAF,CAAH,GAAc,EAAvC;;AAEA,SAASU,cAAT,GAAsD;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;EAClDC,OAAO,CAACC,GAAR,CAAY,gBAAZ;;EACA,QAAQF,MAAM,CAACV,IAAf;IACI,KAAKX,aAAa,CAACC,KAAnB;MACI,OAAO;QAAEQ,IAAI,EAAEY,MAAM,CAACZ;MAAf,CAAP;;IACJ,KAAKT,aAAa,CAACE,MAAnB;MACI,OAAO,EAAP;;IACJ;MACI,OAAOkB,KAAP;EANR;AAQH;;AAED,SAASI,KAAT,GAAmC;EAAA,IAApBJ,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;EAC/BC,OAAO,CAACC,GAAR,CAAY,OAAZ;;EACA,QAAQF,MAAM,CAACV,IAAf;IACI,KAAKR,cAAc,CAACC,KAApB;MACI,OAAO;QAAEY,GAAG,EAAEK,MAAM,CAACL;MAAd,CAAP;;IACJ,KAAKb,cAAc,CAACE,KAApB;MACI,OAAO,EAAP;;IACJ;MACI,OAAOe,KAAP;EANR;AAQH;AAED;;;AACA,MAAMK,WAAW,GAAG5B,eAAe,CAAC;EAChCsB,cADgC;EAChBK;AADgB,CAAD,CAAnC;AAIA,MAAME,gBAAgB,GAAG3B,YAAY,EAArC;AAEA,OAAO,MAAM4B,KAAK,GAAG7B,WAAW,CAC5B2B,WAD4B,EAE5B7B,eAAe,CAAE8B,gBAAF,CAFa,CAAzB"},"metadata":{},"sourceType":"module"}