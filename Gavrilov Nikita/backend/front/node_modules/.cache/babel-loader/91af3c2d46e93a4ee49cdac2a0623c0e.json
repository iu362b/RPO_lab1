{"ast":null,"code":"import axios from 'axios';\nimport Utils from \"../utils/Utils\";\nimport { alertActions, store } from \"../utils/Rdx\";\nconst API_URL = 'http://localhost:8081/api/v1';\nconst AUTH_URL = 'http://localhost:8081/auth';\n\nclass BackendService {\n  login(login, password) {\n    return axios.post(`${AUTH_URL}/login`, {\n      login,\n      password\n    });\n  }\n\n  logout() {\n    return axios.get(`${AUTH_URL}/logout`, {\n      /*headers : {Authorization : Utils.getToken()}*/\n    });\n  }\n  /* Countries */\n\n\n  retrieveAllCountries(page, limit) {\n    return axios.get(`${API_URL}/countries?page=${page === undefined ? 0 : page}&limit=${limit}`);\n  }\n\n  retrieveCountry(id) {\n    return axios.get(`${API_URL}/countries/${id}`);\n  }\n\n  createCountry(country) {\n    return axios.post(`${API_URL}/countries`, country);\n  }\n\n  updateCountry(country) {\n    return axios.put(`${API_URL}/countries/${country.id}`, country);\n  }\n\n  deleteCountries(countries) {\n    return axios.post(`${API_URL}/deletecountries`, countries);\n  } // Таблица \"Художники\"\n\n\n  retrieveAllArtists(page, limit) {\n    return axios.get(`${API_URL}/artists?page=${page === undefined ? 0 : page}&limit=${limit}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  retrieveArtist(id) {\n    return axios.get(`${API_URL}/artists/${id}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  createArtist(artist) {\n    return axios.post(`${API_URL}/artists`, artist, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  updateArtist(artist) {\n    return axios.put(`${API_URL}/artists/${artist.id}`, artist, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  deleteArtists(artists) {\n    return axios.post(`${API_URL}/deleteartists`, artists, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  } // Таблица \"Музеи\"\n\n\n  retrieveAllMuseums(page, limit) {\n    return axios.get(`${API_URL}/museums?page=${page === undefined ? 0 : page}&limit=${limit}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  retrieveMuseum(id) {\n    return axios.get(`${API_URL}/museums/${id}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  createMuseum(museum) {\n    return axios.post(`${API_URL}/museums`, museum, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  updateMuseum(museum) {\n    return axios.put(`${API_URL}/museums/${museum.id}`, museum, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  deleteMuseums(museums) {\n    return axios.post(`${API_URL}/deletemuseums`, museums, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  } // Таблица \"Paintings\"\n\n\n  retrieveAllPaintings(page, limit) {\n    return axios.get(`${API_URL}/paintings/?page=${page === undefined ? 0 : page}&limit=${limit}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  retrievePainting(id) {\n    return axios.get(`${API_URL}/paintings/${id}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  createPainting(painting) {\n    return axios.post(`${API_URL}/paintings`, painting, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  updatePainting(painting) {\n    return axios.put(`${API_URL}/paintings/${painting.id}`, painting, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  deletePaintings(painting) {\n    return axios.post(`${API_URL}/deletepaintings`, painting, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  } // Таблица \"Users\"\n\n\n  retrieveAllUsers(page, limit) {\n    return axios.get(`${API_URL}/users?page=${page === undefined ? 0 : page}&limit=${limit}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  retrieveUser(id) {\n    return axios.get(`${API_URL}/users/${id}`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  createUser(user) {\n    return axios.post(`${API_URL}/users`, user, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  updateUser(user) {\n    return axios.put(`${API_URL}/users/${user.id}`, user, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n  deleteUsers(user) {\n    return axios.post(`${API_URL}/deleteusers`, user, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  }\n\n}\n\nfunction showError(msg) {\n  store.dispatch(alertActions.error(msg));\n}\n\naxios.interceptors.request.use(config => {\n  store.dispatch(alertActions.clear());\n  let token = Utils.getToken();\n  if (token) config.headers.Authorization = token;\n  return config;\n}, error => {\n  showError(error.message);\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(undefined, error => {\n  if (error.response && error.response.status && [401, 403].indexOf(error.response.status) !== -1) showError(\"Ошибка авторизации\");else if (error.response && error.response.data && error.response.data.message) showError(error.response.data.message);else showError(error.message);\n  return Promise.reject(error);\n});\nexport default new BackendService();","map":{"version":3,"names":["axios","Utils","alertActions","store","API_URL","AUTH_URL","BackendService","login","password","post","logout","get","retrieveAllCountries","page","limit","undefined","retrieveCountry","id","createCountry","country","updateCountry","put","deleteCountries","countries","retrieveAllArtists","headers","Authorization","getToken","retrieveArtist","createArtist","artist","updateArtist","deleteArtists","artists","retrieveAllMuseums","retrieveMuseum","createMuseum","museum","updateMuseum","deleteMuseums","museums","retrieveAllPaintings","retrievePainting","createPainting","painting","updatePainting","deletePaintings","retrieveAllUsers","retrieveUser","createUser","user","updateUser","deleteUsers","showError","msg","dispatch","error","interceptors","request","use","config","clear","token","message","Promise","reject","response","status","indexOf","data"],"sources":["C:/Users/ngavr/IdeaProjects/backend/front/src/services/BackendService.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport Utils from \"../utils/Utils\";\r\nimport {alertActions, store} from \"../utils/Rdx\";\r\n\r\nconst API_URL = 'http://localhost:8081/api/v1'\r\nconst AUTH_URL = 'http://localhost:8081/auth'\r\n\r\nclass BackendService {\r\n    login(login, password) {\r\n        return axios.post(`${AUTH_URL}/login`, {login, password})\r\n    }\r\n\r\n    logout() {\r\n        return axios.get(`${AUTH_URL}/logout`, { /*headers : {Authorization : Utils.getToken()}*/})\r\n    }\r\n\r\n    /* Countries */\r\n    retrieveAllCountries(page, limit) {\r\n        return axios.get(`${API_URL}/countries?page=${page === undefined ? 0 : page}&limit=${limit}`);\r\n    }\r\n\r\n    retrieveCountry(id) {\r\n        return axios.get(`${API_URL}/countries/${id}`);\r\n    }\r\n\r\n    createCountry(country) {\r\n        return axios.post(`${API_URL}/countries`, country);\r\n    }\r\n\r\n    updateCountry(country) {\r\n        return axios.put(`${API_URL}/countries/${country.id}`, country);\r\n    }\r\n\r\n    deleteCountries(countries) {\r\n        return axios.post(`${API_URL}/deletecountries`, countries);\r\n    }\r\n\r\n// Таблица \"Художники\"\r\n    retrieveAllArtists(page, limit) {\r\n        return axios.get(`${API_URL}/artists?page=${page === undefined ? 0 : page}&limit=${limit}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    retrieveArtist(id) {\r\n        return axios.get(`${API_URL}/artists/${id}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    createArtist(artist) {\r\n        return axios.post(`${API_URL}/artists`, artist, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    updateArtist(artist) {\r\n        return axios.put(`${API_URL}/artists/${artist.id}`, artist, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    deleteArtists(artists) {\r\n        return axios.post(`${API_URL}/deleteartists`, artists, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    // Таблица \"Музеи\"\r\n    retrieveAllMuseums(page, limit) {\r\n        return axios.get(`${API_URL}/museums?page=${page === undefined ? 0 : page}&limit=${limit}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    retrieveMuseum(id) {\r\n        return axios.get(`${API_URL}/museums/${id}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    createMuseum(museum) {\r\n        return axios.post(`${API_URL}/museums`, museum, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    updateMuseum(museum) {\r\n        return axios.put(`${API_URL}/museums/${museum.id}`, museum, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    deleteMuseums(museums) {\r\n        return axios.post(`${API_URL}/deletemuseums`, museums, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    // Таблица \"Paintings\"\r\n    retrieveAllPaintings(page, limit) {\r\n        return axios.get(`${API_URL}/paintings/?page=${page === undefined ? 0 : page}&limit=${limit}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    retrievePainting(id) {\r\n        return axios.get(`${API_URL}/paintings/${id}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    createPainting(painting) {\r\n        return axios.post(`${API_URL}/paintings`, painting, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    updatePainting(painting) {\r\n        return axios.put(`${API_URL}/paintings/${painting.id}`, painting, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    deletePaintings(painting) {\r\n        return axios.post(`${API_URL}/deletepaintings`, painting, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    // Таблица \"Users\"\r\n    retrieveAllUsers(page, limit) {\r\n        return axios.get(`${API_URL}/users?page=${page === undefined ? 0 : page}&limit=${limit}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    retrieveUser(id) {\r\n        return axios.get(`${API_URL}/users/${id}`, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    createUser(user) {\r\n        return axios.post(`${API_URL}/users`, user, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    updateUser(user) {\r\n        return axios.put(`${API_URL}/users/${user.id}`, user, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n\r\n    deleteUsers(user) {\r\n        return axios.post(`${API_URL}/deleteusers`, user, { headers : {Authorization : Utils.getToken()}});\r\n    }\r\n}\r\n\r\nfunction showError(msg) {\r\n    store.dispatch(alertActions.error(msg))\r\n}\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        store.dispatch(alertActions.clear())\r\n        let token = Utils.getToken();\r\n        if (token)\r\n            config.headers.Authorization = token;\r\n        return config;\r\n    },\r\n    error => {\r\n        showError(error.message)\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\naxios.interceptors.response.use(undefined,\r\n    error => {\r\n        if (error.response && error.response.status && [401, 403].indexOf(error.response.status) !== -1)\r\n            showError(\"Ошибка авторизации\")\r\n        else if (error.response && error.response.data && error.response.data.message)\r\n            showError(error.response.data.message)\r\n        else\r\n            showError(error.message)\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default new BackendService()"],"mappings":"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"},"metadata":{},"sourceType":"module"}